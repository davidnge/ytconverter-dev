<!-- Update in app/views/conversions/show.html.erb -->

<div class="max-w-2xl mx-auto">
  <div class="bg-white shadow-md rounded-lg p-6 mb-4">
    <h2 class="text-xl font-semibold text-gray-800 mb-4">Converting Your Video</h2>
    
    <div class="mb-6">
      <div class="text-sm font-medium text-gray-700 mb-1">Status:</div>
      <div class="text-indigo-600 font-medium" id="status-text">
        <%= @conversion.status.present? ? @conversion.status.capitalize : 'Pending' %>
      </div>
      
      <% if @conversion.status == 'pending' || @conversion.status == 'processing' %>
        <div class="mt-3">
          <div class="w-full bg-gray-200 rounded-full h-2.5 overflow-hidden">
            <div id="progress-bar"
                 class="bg-indigo-600 h-2.5 rounded-full transition-all duration-300 ease-out"
                 style="width: <%= @conversion.status == 'pending' ? '5%' : '40%' %>;"></div>
          </div>
          <div class="text-xs text-gray-500 mt-1">
            <%= @conversion.status == 'pending' ? 'Starting conversion...' : 'Converting your audio...' %>
          </div>
        </div>
      <% end %>
      
      <% if @conversion.status == 'completed' %>
        <div class="mt-3">
          <div class="w-full bg-gray-200 rounded-full h-2.5 overflow-hidden">
            <div id="progress-bar" class="bg-indigo-600 h-2.5 rounded-full" style="width: 100%;"></div>
          </div>
        </div>
      <% end %>
    </div>
    
    <div id="details-panel" class="<%= 'hidden' unless @conversion.title %>">
      <div class="border rounded-md p-4 mb-4">
        <div class="mb-2">
          <div class="text-sm font-medium text-gray-700">Video Title:</div>
          <div id="title-text"><%= @conversion.title %></div>
        </div>
        
        <div class="mb-2">
          <div class="text-sm font-medium text-gray-700">Duration:</div>
          <div id="duration-text"><%= @conversion.formatted_duration %></div>
        </div>
        
        <div>
          <div class="text-sm font-medium text-gray-700">Quality:</div>
          <div><%= @conversion.quality %> kbps</div>
        </div>
      </div>
    </div>
    
    <div id="download-button" class="<%= 'hidden' unless @conversion.status == 'completed' %>">
      <%= link_to "Download MP3", download_conversion_path(@conversion), class: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
    </div>
    
    <div id="error-message" class="<%= 'hidden' unless @conversion.status == 'failed' %>">
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4" role="alert">
        <p><strong>Error:</strong> <span id="error-text"><%= @conversion.error_message %></span></p>
        <p class="mt-2">Please try again with a different video.</p>
      </div>
    </div>
    
    <div class="mt-4 text-center">
      <%= link_to "Convert Another Video", root_path, class: "text-indigo-600 hover:text-indigo-800" %>
    </div>
    
    <% if @conversion.status == 'pending' || @conversion.status == 'processing' %>
      <div class="mt-4 p-4 bg-gray-50 rounded-lg">
        <p class="text-sm text-gray-600">This page will automatically refresh to check for updates.</p>
        <div class="mt-2">
          <button onclick="window.location.reload()" class="py-2 px-4 bg-indigo-100 text-indigo-700 rounded hover:bg-indigo-200 transition-colors w-full">
            Refresh Now
          </button>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
  // Simple auto-refresh for pending or processing statuses
  document.addEventListener('DOMContentLoaded', function() {
    const status = '<%= @conversion.status %>';
    
    if (status === 'pending' || status === 'processing') {
      // Animate progress bar
      const progressBar = document.getElementById('progress-bar');
      if (progressBar) {
        let targetWidth = status === 'pending' ? 30 : 75;
        setTimeout(function() {
          progressBar.style.transition = 'width 2s ease-out';
          progressBar.style.width = targetWidth + '%';
        }, 500);
      }
      
      // Set up auto-refresh
      const refreshIntervals = [5000, 10000, 15000, 20000, 30000]; // Increasing intervals
      let refreshCount = 0;
      
      function scheduleNextRefresh() {
        if (refreshCount >= refreshIntervals.length) return;
        
        const interval = refreshIntervals[refreshCount];
        refreshCount++;
        
        setTimeout(function() {
          // Check current status before refreshing
          fetch('/conversions/<%= @conversion.id %>.json?_=' + new Date().getTime(), {
            headers: { 'Cache-Control': 'no-cache' }
          })
            .then(response => response.json())
            .then(data => {
              if (data.status === 'completed') {
                // Update UI directly without full page refresh
                document.getElementById('status-text').textContent = 'Completed';
                document.getElementById('progress-bar').style.width = '100%';
                document.getElementById('download-button').classList.remove('hidden');
                
                if (data.title) {
                  document.getElementById('details-panel').classList.remove('hidden');
                  document.getElementById('title-text').textContent = data.title;
                  if (data.duration) {
                    document.getElementById('duration-text').textContent = data.duration;
                  }
                }
              } else if (data.status === 'failed') {
                // Show error message
                document.getElementById('status-text').textContent = 'Failed';
                document.getElementById('error-message').classList.remove('hidden');
                document.getElementById('error-text').textContent = data.error_message || 'An unknown error occurred';
              } else {
                // Schedule next refresh if still processing
                scheduleNextRefresh();
              }
            })
            .catch(error => {
              console.error('Error checking status:', error);
              // Fall back to full page refresh
              window.location.reload();
            });
        }, interval);
      }
      
      // Start refresh cycle
      scheduleNextRefresh();
    }
  });
</script>