<div class="bg-white shadow-md rounded-lg p-6 mb-8 status-container" data-controller="conversion-status" data-conversion-status-id-value="<%= conversion.id %>">
  <h2 class="text-xl font-semibold text-gray-800 mb-4">Converting Your Video</h2>
  
  <%# Debug information to see what state we're actually getting %>
  <% if Rails.env.development? %>
    <!-- Debug Info (remove in production) -->
    <div class="text-xs text-gray-400 mb-2">
      Status: "<%= conversion.status %>" | 
      Status downcase: "<%= conversion.status.to_s.downcase %>" | 
      Is failed?: <%= conversion.status.to_s.downcase == 'failed' ? 'Yes' : 'No' %>
    </div>
  <% end %>
  
  <%# IMPORTANT: Force the condition to be explicit and separate from the HTML %>
  <% is_failed = conversion.status.to_s.downcase == 'failed' %>
  
  <% if is_failed %>
    <!-- Error status - always show error message -->
    <div data-conversion-status-target="errorMessage" class="error-message-container">
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-md mb-4" role="alert">
        <p class="font-medium">Unable to convert this video</p>
        <p class="mt-2"><span data-conversion-status-target="errorText"><%= conversion.error_message.presence || "An unknown error occurred. Please try a different video." %></span></p>
        <p class="mt-4">Please try again with a different video.</p>
      </div>
      <!-- Always include a prominent button inside the error message container -->
      <div class="mt-6">
        <%= link_to "Convert Another Video", root_path, class: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
      </div>
    </div>
  <% else %>
    <!-- Normal processing flow -->
    <div class="mb-6">
      <div class="text-sm font-medium text-gray-700 mb-1">Status:</div>
      <div class="text-indigo-600 font-medium" data-conversion-status-target="statusText">
        <%= conversion.status.present? ? conversion.status.capitalize : 'Pending' %>
      </div>
      
      <div class="mt-3">
        <div class="w-full bg-gray-200 rounded-full h-2.5 overflow-hidden progress-container <%= conversion.status == 'processing' ? 'processing' : '' %>">
          <div id="progress-bar"
               class="progress-bar bg-indigo-600 h-2.5 rounded-full"
               style="width: <%= conversion.status == 'completed' ? '100%' : (conversion.status == 'processing' ? '40%' : '5%') %>;"
               data-conversion-status-target="progressBar"></div>
        </div>
        <div class="text-xs text-gray-500 mt-1">
          <%= conversion.status == 'completed' ? 'Conversion complete!' : 
              (conversion.status == 'processing' ? 'Converting your audio...' : 'Starting conversion...') %>
        </div>
      </div>
    </div>
    
    <div data-conversion-status-target="details" class="<%= 'hidden' unless conversion.title %>">
      <div class="border rounded-md p-4 mb-4">
        <div class="mb-2">
          <div class="text-sm font-medium text-gray-700">Video Title:</div>
          <div data-conversion-status-target="title"><%= conversion.title %></div>
        </div>
        
        <div class="mb-2">
          <div class="text-sm font-medium text-gray-700">Duration:</div>
          <div data-conversion-status-target="duration"><%= conversion.formatted_duration %></div>
        </div>
        
        <div>
          <div class="text-sm font-medium text-gray-700">Quality:</div>
          <div><%= conversion.quality %> kbps</div>

          <% if conversion.duration && conversion.duration > 3600 && conversion.quality == "192" %>
            <div class="mt-2 text-xs text-indigo-600 bg-indigo-50 p-2 rounded">
              <strong>Note:</strong> Quality was automatically set to 192 kbps since this is a longer video (over 1 hour).
              This helps maintain reasonable file sizes while preserving good audio quality.
            </div>
          <% end %>
        </div>
      </div>
    </div>
    
    <div data-conversion-status-target="downloadButton" class="<%= 'hidden' unless conversion.status == 'completed' %>">
      <%= link_to "Download MP3", download_conversion_path(conversion), class: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
    </div>
    
    <!-- Only show this for non-failed status -->
    <div class="mt-4 text-center" id="convert-another-link">
      <%= link_to "Convert Another Video", root_path, class: "text-indigo-600 hover:text-indigo-800" %>
    </div>
  <% end %>
  
  <% if !is_failed && conversion.status != 'completed' %>
    <div id="manual-refresh" class="mt-6 hidden">
      <p class="text-sm text-gray-600 mb-2">Is your download taking longer than expected?</p>
      <button onclick="window.location.reload()" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        Check Conversion Status
      </button>
    </div>
  <% end %>
</div>

<script>
  // Ensure error message is properly shown on page load if status is failed
  document.addEventListener('DOMContentLoaded', function() {
    const statusContainer = document.querySelector('.status-container');
    // Check if we're dealing with a failed status - verify with a data attribute
    <% if is_failed %>
      console.log("Initial page load: Failed status detected");
      // Directly find and show the error message container
      const errorMsg = document.querySelector('[data-conversion-status-target="errorMessage"]');
      if (errorMsg) {
        console.log("Found error message container, ensuring it's visible");
        errorMsg.classList.remove('hidden');
        
        // Make sure convert-another-link is NOT shown (redundant with the button in error message)
        const convertAnotherLink = document.getElementById('convert-another-link');
        if (convertAnotherLink) {
          console.log("Hiding standard convert another link");
          convertAnotherLink.classList.add('hidden');
        }
      } else {
        console.error("Error message container not found");
      }
    <% end %>
    
    // Show the manual refresh button after 60 seconds if conversion is still in progress
    const statusText = document.querySelector('[data-conversion-status-target="statusText"]');
    const conversionStatus = '<%= conversion.status.to_s.downcase %>';
    
    if ((statusText && (statusText.textContent.toLowerCase() === 'pending' || 
                       statusText.textContent.toLowerCase() === 'processing')) &&
        conversionStatus !== 'failed' && conversionStatus !== 'completed') {
      
      setTimeout(function() {
        const currentStatus = document.querySelector('[data-conversion-status-target="statusText"]')?.textContent.toLowerCase();
        const manualRefresh = document.getElementById('manual-refresh');
        
        if ((currentStatus === 'pending' || currentStatus === 'processing') && manualRefresh) {
          manualRefresh.classList.remove('hidden');
        }
      }, 60000); // 1 minute
    }
  });
</script>