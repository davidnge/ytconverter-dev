<div class="bg-white shadow-md rounded-lg p-6 mb-8 status-container" data-controller="conversion-status" data-conversion-status-id-value="<%= conversion.id %>">
  <h2 class="text-xl font-semibold text-gray-800 mb-4">Converting Your Video</h2>
  
  <%# IMPORTANT: Force the condition to be explicit and separate from the HTML %>
  <% is_failed = conversion.status.to_s.downcase == 'failed' %>
  
  <% if is_failed %>
    <!-- Error status - always show error message -->
    <div data-conversion-status-target="errorMessage" class="error-message-container">
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-md mb-4" role="alert">
        <p class="font-medium">Unable to convert this video</p>
        <p class="mt-2"><span data-conversion-status-target="errorText"><%= conversion.error_message.presence || "An unknown error occurred. Please try a different video." %></span></p>
        <p class="mt-4">Please try again with a different video.</p>
      </div>
      <!-- Always include a prominent button inside the error message container -->
      <div class="mt-6">
        <%= link_to "Convert Another Video", root_path, class: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
      </div>
    </div>
  <% else %>
    <!-- Normal processing flow -->
    <div class="mb-6">
      <div class="text-sm font-medium text-gray-700 mb-1">Status:</div>
      
      <!-- Status container - we'll replace the content of this div via the controller -->
      <div data-conversion-status-target="statusContainer">
        <% if conversion.status.to_s.downcase == 'pending' %>
          <div class="flex items-center text-indigo-600 font-medium">
            <span>Starting to convert your video...</span>
            <svg class="animate-spin ml-2 h-4 w-4 text-indigo-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </div>
        <% elsif conversion.status.to_s.downcase == 'processing' %>
          <div>
            <div class="flex items-center text-indigo-600 font-medium">
              <span>Processing your audio file...</span>
              <svg class="animate-spin ml-2 h-4 w-4 text-indigo-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </div>
            
            <div class="text-sm text-gray-600 mt-2 ml-0 border-l-2 border-indigo-100 pl-4">
              <p class="mb-1">✓ Connected to YouTube</p>
              <p class="mb-1">✓ Extracting audio</p>
              <p class="text-indigo-600 flex items-center">
                Converting to MP3
                <svg class="animate-spin ml-2 h-3 w-3 text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </p>
              <p class="text-indigo-500 italic mt-2" id="processing-tip">Long videos may take a moment...</p>
            </div>
          </div>
        <% elsif conversion.status.to_s.downcase == 'completed' %>
          <div class="flex items-center text-green-700 font-medium">
            <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <span>Conversion completed! Your MP3 file is ready for download.</span>
          </div>
        <% else %>
          <!-- Fallback for any other status -->
          <div class="text-indigo-600 font-medium">
            <%= conversion.status.present? ? conversion.status.capitalize : 'Pending' %>
          </div>
        <% end %>
      </div>
    </div>
    
    <div data-conversion-status-target="details" class="<%= 'hidden' unless conversion.title %>">
      <div class="border rounded-md p-4 mb-4">
        <div class="mb-2">
          <div class="text-sm font-medium text-gray-700">Video Title:</div>
          <div data-conversion-status-target="title"><%= conversion.title %></div>
        </div>
        
        <div class="mb-2">
          <div class="text-sm font-medium text-gray-700">Duration:</div>
          <div data-conversion-status-target="duration"><%= conversion.formatted_duration %></div>
        </div>
        
        <div>
          <div class="text-sm font-medium text-gray-700">Quality:</div>
          <div><%= conversion.quality %> kbps</div>

          <% if conversion.duration && conversion.duration > 3600 && conversion.quality == "192" %>
            <div class="mt-2 text-xs text-indigo-600 bg-indigo-50 p-2 rounded">
              <strong>Note:</strong> Quality was automatically set to 192 kbps since this is a longer video (over 1 hour).
              This helps maintain reasonable file sizes while preserving good audio quality.
            </div>
          <% end %>
        </div>
      </div>
    </div>
    
    <div data-conversion-status-target="downloadButton" class="<%= 'hidden' unless conversion.status == 'completed' %>">
      <%= link_to "Download MP3", download_conversion_path(conversion), class: "w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
    </div>
    
    <!-- Only show this for non-failed status -->
    <div class="mt-4 text-center" id="convert-another-link">
      <%= link_to "Convert Another Video", root_path, class: "text-indigo-600 hover:text-indigo-800" %>
    </div>
  <% end %>
  
  <% if !is_failed && conversion.status != 'completed' %>
    <div id="manual-refresh" class="mt-6 hidden">
      <p class="text-sm text-gray-600 mb-2">Is your download taking longer than expected?</p>
      <button onclick="window.location.reload()" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        Check Conversion Status
      </button>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Process tip rotation for processing tip
    const processingTip = document.getElementById('processing-tip');
    
    if (processingTip) {
      // Define some processing tips
      const tips = [
        "Optimizing audio quality...",
        "Applying audio filters...",
        "Encoding with selected bitrate...",
        "Preparing your download...",
        "Almost there...",
        "Finalizing your MP3 file...",
        "Long videos may take a moment...",
        "We're working on your conversion...",
        "Thank you for your patience..."
      ];
      
      let currentTipIndex = 0;
      
      // Update tip every 8 seconds
      const tipInterval = setInterval(function() {
        if (processingTip) {
          // Move to next tip
          currentTipIndex = (currentTipIndex + 1) % tips.length;
          processingTip.textContent = tips[currentTipIndex];
        } else {
          // If the tip element is gone, clear the interval
          clearInterval(tipInterval);
        }
      }, 8000);
    }
    
    // Show the manual refresh button after 60 seconds if conversion is still in progress
    const conversionStatus = '<%= conversion.status.to_s.downcase %>';
    
    if (conversionStatus !== 'failed' && conversionStatus !== 'completed') {
      setTimeout(function() {
        const statusContainer = document.querySelector('[data-conversion-status-target="statusContainer"]');
        const manualRefresh = document.getElementById('manual-refresh');
        
        if (statusContainer && statusContainer.textContent.includes('Processing') && manualRefresh) {
          manualRefresh.classList.remove('hidden');
        }
      }, 60000); // 1 minute
    }
  });
</script>